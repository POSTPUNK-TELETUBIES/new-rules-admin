"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[204],{8809:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>c});var r=t(1527),i=t(7463);const s={slug:"technical-memory-pr-check",Title:"Technical Memory for Verification of Modified Lines Count in Pull Request",authors:"jaenfigueroa"},l="Technical Memory for Verification of Modified Lines Count in Pull Request",o={permalink:"/new-rules-admin/wiki/blog/technical-memory-pr-check",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-1-19-technical-memory-pr-check.md",source:"@site/blog/2024-1-19-technical-memory-pr-check.md",title:"Technical Memory for Verification of Modified Lines Count in Pull Request",description:"1. Initiate Action Workflow",date:"2024-01-19T00:00:00.000Z",formattedDate:"January 19, 2024",tags:[],readingTime:3.695,hasTruncateMarker:!1,authors:[{name:"Jaen Figueroa",title:"Frontend Developer",url:"https://github.com/jaenfigueroa",imageURL:"https://avatars.githubusercontent.com/u/69079292?v=4",key:"jaenfigueroa"}],frontMatter:{slug:"technical-memory-pr-check",Title:"Technical Memory for Verification of Modified Lines Count in Pull Request",authors:"jaenfigueroa"},unlisted:!1,nextItem:{title:"Why was the switch from Probot to GitHub Actions made?",permalink:"/new-rules-admin/wiki/blog/probot-to-github-actions"}},a={authorsImageUrls:[void 0]},c=[{value:"1. Initiate Action Workflow",id:"1-initiate-action-workflow",level:2},{value:"2. Obtain the Total Number of Changed Lines for All Lock Files",id:"2-obtain-the-total-number-of-changed-lines-for-all-lock-files",level:2},{value:"3. Calculate Values for the Report",id:"3-calculate-values-for-the-report",level:2},{value:"4. Generate the Message to be Displayed in the Repor",id:"4-generate-the-message-to-be-displayed-in-the-repor",level:2},{value:"5. Delete Previous Reports from Comments",id:"5-delete-previous-reports-from-comments",level:2},{value:"6. Display the Report as a Comment in the Pull Request",id:"6-display-the-report-as-a-comment-in-the-pull-request",level:2},{value:"7. Check if the Number of Modified Lines Does Not Exceed the Limit",id:"7-check-if-the-number-of-modified-lines-does-not-exceed-the-limit",level:2},{value:"8. Results",id:"8-results",level:2}];function h(e){const n={code:"code",h2:"h2",img:"img",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.a)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.h2,{id:"1-initiate-action-workflow",children:"1. Initiate Action Workflow"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"This YAML file will run the first time a new pull request is created, as well as every time the pull request is updated."}),"\n",(0,r.jsx)(n.li,{children:"We grant the necessary write permissions."}),"\n",(0,r.jsx)(n.li,{children:"Designate the execution environment."}),"\n",(0,r.jsx)(n.li,{children:"Declare the environment variables to be used for the tasks."}),"\n",(0,r.jsx)(n.li,{children:"Specify the version of GitHub Actions to be used."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:"on:\r\n  pull_request:\r\n    branches: '*'\r\n\r\npermissions: write-all\r\n\r\njobs:\r\n  check_pr_size:\r\n    environment: dev\r\n    env:\r\n      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}\r\n      MAX_LINES_PR: ${{ vars.MAX_LINES_PR || 600 }}\r\n      PR_COMMENTS_URL: ${{ github.event.pull_request.comments_url }}\r\n      PR_ADDITIONS: ${{ github.event.pull_request.additions }}\r\n      PR_DELETIONS: ${{ github.event.pull_request.deletions }}\r\n    runs-on: ubuntu-latest\r\n    steps:\r\n      - uses: actions/checkout@v2\r\n        with:\r\n          fetch-depth: 0\r\n\r\n      ... more tasks\n"})}),"\n",(0,r.jsx)(n.h2,{id:"2-obtain-the-total-number-of-changed-lines-for-all-lock-files",children:"2. Obtain the Total Number of Changed Lines for All Lock Files"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsxs)(n.li,{children:["We have a script that executes ",(0,r.jsx)(n.code,{children:"git diff --stat origin/BRANCH_NAME"}),", from which we extract the number of changed lines for all lock files."]}),"\n",(0,r.jsx)(n.li,{children:"The result is stored within a variable named PR_MODIFY_LOCK, which is then saved as a new environment variable."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Obtain the total number of modified lines of the lock files\r\n  env:\r\n    PR_DESTINATION_BRANCH: ${{ github.event.pull_request.base.ref }}\r\n  run: |\r\n    chmod +x bash-scripts/lines-of-lock.sh\r\n\r\n    PR_MODIFY_LOCK=$(bash-scripts/lines-of-lock.sh)\r\n\r\n    echo "PR_MODIFY_LOCK=${PR_MODIFY_LOCK}" >> $GITHUB_ENV\n'})}),"\n",(0,r.jsx)(n.h2,{id:"3-calculate-values-for-the-report",children:"3. Calculate Values for the Report"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Calculate the total number of edited lines."}),"\n",(0,r.jsx)(n.li,{children:"Calculate the number of edited lines excluding the number of edited lines for lock files."}),"\n",(0,r.jsx)(n.li,{children:"Calculate the remaining number of lines."}),"\n",(0,r.jsx)(n.li,{children:"Finally, save these calculated values as new environment variables."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Obtaining missing data for reporting purposes\r\n  run: |\r\n    PR_MODIFY_ALL=$(($PR_ADDITIONS + $PR_DELETIONS))\r\n    PR_MODIFY_REST=$(($PR_MODIFY_ALL - $PR_MODIFY_LOCK))\r\n\r\n    if [ $PR_MODIFY_REST -gt $MAX_LINES_PR ]; then\r\n        PR_EXTRA=$(($PR_MODIFY_REST - $MAX_LINES_PR))\r\n    else\r\n        PR_EXTRA=0\r\n    fi\r\n\r\n    echo "PR_MODIFY_ALL=${PR_MODIFY_ALL}" >> $GITHUB_ENV\r\n    echo "PR_MODIFY_REST=${PR_MODIFY_REST}" >> $GITHUB_ENV\r\n    echo "PR_EXTRA=${PR_EXTRA}" >> $GITHUB_ENV\n'})}),"\n",(0,r.jsx)(n.h2,{id:"4-generate-the-message-to-be-displayed-in-the-repor",children:"4. Generate the Message to be Displayed in the Repor"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"First, generate the note for the report."}),"\n",(0,r.jsxs)(n.li,{children:["Utilize the template we have for the report and use ",(0,r.jsx)(n.code,{children:"sed"})," to replace the variables."]}),"\n",(0,r.jsx)(n.li,{children:"Finally, save the generated message as a new environment variable."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Generate the message for commenting on the pr\r\n  run: |\r\n    if [[ $PR_MODIFY_REST -gt $MAX_LINES_PR ]]; then\r\n      NOTE="@${{ github.actor }} Ups, tu pull request tiene m\xe1s de $MAX_LINES_PR l\xedneas modificadas, tienes un total de $PR_MODIFY_REST, considera dividir este pull request."\r\n    else\r\n      NOTE="Perfecto, el pull request no sobrepasa las $MAX_LINES_PR l\xedneas modificadas."\r\n    fi\r\n\r\n    MESSAGE=$(sed \\\r\n        -e \':a;N;$!ba;s/\\r//g\' \\\r\n        -e \'s/\\n/\\\\n/g\' \\\r\n        -e "s/NOTE/$NOTE/" \\\r\n        -e "s/PR_ADDITIONS/$PR_ADDITIONS/" \\\r\n        -e "s/PR_DELETIONS/$PR_DELETIONS/" \\\r\n        -e "s/PR_MODIFY_ALL/$PR_MODIFY_ALL/" \\\r\n        -e "s/PR_MODIFY_LOCK/$PR_MODIFY_LOCK/" \\\r\n        -e "s/PR_MODIFY_REST/$PR_MODIFY_REST/" \\\r\n        -e "s/PR_EXTRA/$PR_EXTRA/" templates/pr-report.md)\r\n\r\n    echo "MESSAGE=${MESSAGE}" >> $GITHUB_ENV\n'})}),"\n",(0,r.jsx)(n.h2,{id:"5-delete-previous-reports-from-comments",children:"5. Delete Previous Reports from Comments"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Make a request to obtain a list of all comments."}),"\n",(0,r.jsx)(n.li,{children:'Filter the list for those containing the phrase "Results of the PR pre-review."'}),"\n",(0,r.jsx)(n.li,{children:"Obtain a list of IDs for the remaining comments."}),"\n",(0,r.jsx)(n.li,{children:"Iterate through the list to delete each of them."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Remove previous reports from comments\r\n  run: |\r\n    COMMENTS=$(curl -L \\\r\n        -H "Accept: application/vnd.github+json" \\\r\n        -H "Authorization: token $GITHUB_TOKEN" \\\r\n        -H "X-GitHub-Api-Version: 2022-11-28" \\\r\n        $PR_COMMENTS_URL | jq \'.[] | select(.body | contains("Resultados de la pre-revisi\xf3n del PR"))\')\r\n\r\n    COMMENTS_ID=$(echo "$COMMENTS" | jq -r \'.id\')\r\n\r\n    IFS=$\'\\n\'\r\n    for ID in $COMMENTS_ID; do\r\n\r\n        COMMENT_URL="${{ github.api_url }}/repos/${{ github.repository }}/issues/comments/$ID"\r\n\r\n        curl -L \\\r\n            -X DELETE \\\r\n            -H "Accept: application/vnd.github+json" \\\r\n            -H "Authorization: token $GITHUB_TOKEN" \\\r\n            -H "X-GitHub-Api-Version: 2022-11-28" \\\r\n            $COMMENT_URL\r\n    done\n'})}),"\n",(0,r.jsx)(n.h2,{id:"6-display-the-report-as-a-comment-in-the-pull-request",children:"6. Display the Report as a Comment in the Pull Request"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Make a request to add the new message, using the previously saved message as an environment variable."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Shows the report as a comment in the pr\r\n  run: |\r\n    curl \\\r\n    -X POST \\\r\n    $PR_COMMENTS_URL \\\r\n    -H "Content-Type: application/json" \\\r\n    -H "Authorization: token $GITHUB_TOKEN" \\\r\n    --data "{ \\"body\\": \\"$MESSAGE\\" }"\n'})}),"\n",(0,r.jsx)(n.h2,{id:"7-check-if-the-number-of-modified-lines-does-not-exceed-the-limit",children:"7. Check if the Number of Modified Lines Does Not Exceed the Limit"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"Verify that the number of modified lines does not exceed the established limit. If the limit is exceeded, display an error preventing the merge until the necessary modifications are made."}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yml",children:'- name: Stop the execution of the workflow if the limit of modified lines is exceeded.\r\n  run: |\r\n    if [[ $PR_MODIFY_REST -gt $MAX_LINES_PR ]]\r\n    then\r\n        echo "Warning - total lines changed is greater than" $MAX_LINES_PR.\r\n        echo "Please consider breaking this PR down."\r\n        exit 1\r\n    fi\n'})}),"\n",(0,r.jsx)(n.h2,{id:"8-results",children:"8. Results"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If the number of modified lines does not exceed the established limit"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"image",src:t(6931).Z+"",width:"1044",height:"758"})}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"If the number of modified lines exceeds the established limit"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:(0,r.jsx)(n.img,{alt:"image",src:t(7155).Z+"",width:"1052",height:"738"})})]})}function d(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(h,{...e})}):h(e)}},7155:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/pr-report-error-785f23cb99fb07053fd242c445909d79.png"},6931:(e,n,t)=>{t.d(n,{Z:()=>r});const r=t.p+"assets/images/pr-report-ok-0928feb29159f3ef414d9b989771c88e.png"},7463:(e,n,t)=>{t.d(n,{Z:()=>o,a:()=>l});var r=t(959);const i={},s=r.createContext(i);function l(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);