"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[413],{6354:e=>{e.exports=JSON.parse('{"blogPosts":[{"id":"self-studying","metadata":{"permalink":"/new-rules-admin/wiki/es/blog/self-studying","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-1-14-Self-studying.md","source":"@site/i18n/es/docusaurus-plugin-content-blog/2024-1-14-Self-studying.md","title":"Auto estudio","description":"Deber\xedamos autoestudiarnos si queremos programar.","date":"2024-01-14T00:00:00.000Z","formattedDate":"14 de enero de 2024","tags":[],"readingTime":7.58,"hasTruncateMarker":false,"authors":[{"name":"Piero Ramirez","title":"Full Stack Engineer","url":"https://github.com/Shadowrunner11","imageURL":"https://avatars.githubusercontent.com/u/77254647?v=4","key":"piero"}],"frontMatter":{"slug":"self-studying","title":"Auto estudio","authors":"piero"},"unlisted":false},"content":"Deber\xedamos autoestudiarnos si queremos programar.\\n\\nCuando alguien nos asigna una tarea, a veces no sabemos c\xf3mo proceder, pero generalmente los gerentes y POs quieren que estimemos el tiempo que llevar\xe1.\\n\\nEntonces, lanzamos un n\xfamero y ahora hay un compromiso de entregar la funci\xf3n. El problema aqu\xed es que somos muy malos estimando por naturaleza. Nuestros cerebros son muy amables con los futuros yo (y entre otras cosas, esa es una de las razones por las que las personas procrastinan).\\n\\nVamos a explorar un ejemplo; imagina que te asignan codificar una comparaci\xf3n de matrices que se asemeja a una tabla de hojas de c\xe1lculo, cambia din\xe1micamente el n\xfamero de productos (el usuario puede agregar o quitar columnas de productos) y la primera columna y fila est\xe1n bloqueadas, lo que significa que cuando desplazas hacia abajo, la fila del encabezado deber\xeda \\"quedarse\\" en la parte superior. Y en la vista m\xf3vil deber\xeda admitir ver solo dos columnas como m\xe1ximo, y para ver el resto, tambi\xe9n deber\xeda admitir desplazamiento.\\n\\n## Autoeficacia\\n\\nSi nunca has hecho algo como esto antes, hay una alta probabilidad de rendirse incluso antes de comenzar.\\n\\nSi has intentado algo similar pero el intento no fue exitoso, es probable que lo intentes s\xf3lidamente ahora, pero tal vez termines rindi\xe9ndote, aunque es menos probable esta vez.\\n\\nAhora, si tu intento anterior de hacer algo similar fue exitoso en alg\xfan momento, hay una buena probabilidad de que ahora lo hagas mejor.\\n\\nPero, \xbfc\xf3mo puedo ganar autoeficacia si todo siempre es nuevo?\\n\\n### Fundamentos\\n\\nSi tienes bases s\xf3lidas en programaci\xf3n y ciencias de la computaci\xf3n, como:\\n\\n- Saber c\xf3mo dise\xf1ar algoritmos\\n- Entender estructuras de datos\\n- Tener un modelo mental sobre los roles de las variables\\n- Complejidad de tiempo y espacio\\n- Asignaci\xf3n de memoria en pila y mont\xf3n\\n- Perfilado\\n\\nTe sentir\xe1s m\xe1s seguro en lo que est\xe1s haciendo. Si eres un desarrollador frontend, es posible que te preguntes \\"\xbfpor qu\xe9 diablos debo saber todo esto?\\".\\n\\n#### Requisitos no funcionales y errores (tambi\xe9n conocido como \\"\xa1pero funciona!, deja de pedirme m\xe1s\\")\\n\\nEstos son requisitos como:\\n\\n- La web debe cargar en menos de 500 ms\\n- La matriz de comparaci\xf3n debe ser amigable con SEO, as\xed que no CSR, por favor\\n- La p\xe1gina debe tener 90 o m\xe1s en la salud de web vitals\\n- Si la l\xf3gica de JavaScript falla, no debe bloquear el JS de otros componentes\\n- Deber\xeda funcionar en IE11 (s\xed, hay personas que lo usan para ver nuestra p\xe1gina, no me preguntes por qu\xe9)\\n- Deber\xeda funcionar en un tel\xe9fono con especificaciones bajas (y otros componentes de la p\xe1gina ya tienen toneladas de JS y hay muchos scripts de JS para monitoreo y m\xe9tricas comerciales en funcionamiento)\\n- El CSS no cr\xedtico deber\xeda ser diferido\\n\\nDios m\xedo, ahora es bastante complicado tener en cuenta todo esto.\\n\\n\xbfY sobre los errores?\\n\\n- Otros componentes en el sitio web est\xe1n interactuando con los tuyos, haci\xe9ndolo parecer un Picasso\\n- Hay cambios en la disposici\xf3n debido a que tu CSS interact\xfaa con el c\xf3digo CSS anterior\\n- El c\xf3digo CSS anterior est\xe1 anulando el tuyo\\n- En el futuro habr\xe1 m\xe1s y m\xe1s errores porque los componentes siguen cambiando y la gente sigue agregando scripts externos\\n\\nSi eres un desarrollador frontend, hay herramientas a tu disposici\xf3n que pueden ayudarte a realizar un seguimiento del rendimiento de tu aplicaci\xf3n.\\n\\nPor ejemplo, en navegadores basados en Chromium hay un monitor de perfil en tiempo real que muestra cu\xe1ntos cambios de disposici\xf3n est\xe1n ocurriendo, cu\xe1nto espacio ocupa el mont\xf3n de JS, nodos DOM, y m\xe1s. Tambi\xe9n hay un perfilador de mont\xf3n/rendimiento donde puedes grabar una sesi\xf3n y evaluar d\xf3nde hay problemas en el CSS y JS. Adem\xe1s, puedes emular un dispositivo con menor capacidad de CPU que el tuyo (no le estamos dando tu m\xe1quina al cliente, \xbfrecuerdas esas palabras?).\\n\\nAdem\xe1s de detectar errores, hay un inspector de fuente completo y un depurador donde puedes, bueno, depurar y crear puntos de interrupci\xf3n.\\n\\n\xbfGenial, verdad? S\xed, pero, \xbfcuando te encuentras con problemas, sabes c\xf3mo resolverlos y entender las razones detr\xe1s de esos problemas para asegurarte de que no vas a romper nada?\\n\\n#### Fuerza bruta\\n\\nS\xed, Knuth dijo una vez que \\"la optimizaci\xf3n prematura\\" es la ra\xedz de todo mal\\", as\xed que cuando programas, realmente te preocupas de que funcione, lo cual est\xe1 bien.\\n\\nEn ese contexto, puedes usar algoritmos de fuerza bruta, lo cual no es malo, pero al menos cuando termines, puedes preguntar a cualquier GPT (chat GPT, code whisper, copilot, etc.) \\"oye, \xbfpodr\xedas optimizar esto?\\"\\n\\nEl problema surge cuando copias todo tu c\xf3digo y lo pegas y le dices literalmente a la herramienta \\"oye, haz esto mejor\\", y as\xed no es como funciona, ya que los GPT necesitan contexto e instrucciones detalladas. Adem\xe1s, los GPT no son perfectos, as\xed que pueden alucinar con tus solicitudes.\\n\\nEntonces, **EN REALIDAD** necesitas saber c\xf3mo resolver estos problemas o al menos comprender los fundamentos para guiar a tus herramientas generativas para que te ayuden.\\n\\nPero d\xe9jame decirte algo, la inform\xe1tica naci\xf3 de las matem\xe1ticas, y aunque no tengamos en cuenta los a\xf1os que la humanidad ha pasado estudiando matem\xe1ticas, esto no es ciencia de la nueva era, desde Tur\xedn y Von Neumann hasta hoy, hemos tenido suficiente tiempo para ver problemas repetitivos y patrones en estos problemas, de ah\xed las bibliotecas que tenemos ahora.\\n\\nPor lo tanto, tal vez no deber\xedas programar haciendo todas las cosas a trav\xe9s de la fuerza bruta, y podr\xedas empezar teniendo al menos un c\xf3digo moderadamente \xf3ptimo y si cada otro programador est\xe1 haciendo lo mismo, bueno, toda la p\xe1gina funcionar\xe1 bien en lugar de tener un monstruo.\\n\\nPero, esto va a llevar m\xe1s tiempo, en realidad..., no y s\xed. Si nunca has practicado estas cosas y nunca has estudiado algoritmos y su dise\xf1o, bueno, s\xed, debes entregar funcionalidad, as\xed que no hay tiempo para aprender estas cosas ahora.\\n\\nTengo una fuerte opini\xf3n sobre esas personas, y es que no son profesionales.\\n\\nPor el contrario, si has estudiado esas cosas, bueno, tienes un punto m\xe1s a favor de tu autoeficacia. Realmente est\xe1s familiarizado con los problemas.\\n\\nEntonces, todo es nuevo, s\xed, pero tal vez hay partes del problema que se pueden abstraer y encontrar patrones en esos mini-problemas que ya has resuelto.\\n\\nLleva mucho tiempo dominar estas cosas, en realidad. No solo la pr\xe1ctica, sino tambi\xe9n el autoestudio de la teor\xeda. Y en una nota aparte, eso es muy frustrante y requiere paciencia y dedicaci\xf3n, trata de ser amable contigo mismo.\\n\\n#### En realidad hay poco cambio\\n\\nSi leemos un libro de los a\xf1os 70 sobre programaci\xf3n, podr\xedamos encontrar... hilarante que gran parte de esos libros sigue siendo relevante, si no es lo mismo. Las computadoras digitales son simplemente m\xe1s r\xe1pidas, m\xe1s potentes y m\xe1s peque\xf1as que en el pasado, pero sus principios, en la mayor\xeda de los casos, son los mismos que hace 50 a\xf1os.\\n\\nLos problemas que los ingenieros de software enfrentaron en los a\xf1os 70 son casi los mismos que las empresas enfrentan hoy, incluso con todos los cambios en DevOps. \xbfPor qu\xe9? Tal vez porque estamos haciendo las cosas mal. Sin embargo, hoy tenemos soluciones ingeniosas que podemos aplicar para resolver esos problemas, pero todos est\xe1n demasiado ocupados haciendo las cosas correctamente, nuevamente, tal vez.\\n\\nS\xed, hay nuevas tecnolog\xedas todos los d\xedas que aparecen para resolver nuevos problemas, \xbfverdad? M\xe1s o menos, en realidad, esta nueva tecnolog\xeda nos proporciona nuevos paradigmas y automatizaci\xf3n de algunas tareas y problemas repetitivos. Esta nueva tecnolog\xeda puede mejorar la velocidad con la que hacemos las cosas, pero la habilidad del programador y el dise\xf1o del sistema juegan un papel importante en la implementaci\xf3n. Los paquetes pueden seguir mejor\xe1ndose, por eso tienen versiones, pero el c\xf3digo en los repositorios (si nadie lo elimina) no va a morir biol\xf3gicamente alg\xfan d\xeda y revertir su estado a la versi\xf3n 0.0.1. Pero todos tus predecesores aprendieron, cuando mueren, que la informaci\xf3n que estaba en sus mentes se borra para siempre de all\xed.\\n\\nPodr\xedan haber escrito libros y documentos, pero tienes que volver a aprender todo desde cero, y hay una buena probabilidad de que interpretes esa informaci\xf3n de manera diferente a los dem\xe1s y ahora tenemos en nuestras manos una guerra en internet en los foros sobre \\"la manera correcta\\". Humanos, \xbfverdad?\\n\\n### Aumentando la autoeficacia\\n\\nEntonces, para ser m\xe1s seguro, deber\xedas estudiar muchas cosas. Tal vez no tengas suficiente tiempo y las personas a tu alrededor (palabra fuerte y opini\xf3n que viene) simplemente son demasiado mediocres en su trabajo.\\n\\nPor esa raz\xf3n, deber\xeda haber tiempo para aprender los fundamentos por ti mismo. Incluso en lugares que tienen educadores de \xe9lite, _los estudiantes tienen que estudiar_ mucho por s\xed mismos.\\n\\nCuanto m\xe1s sepas, m\xe1s seguro te volver\xe1s al realizar cualquier tarea, ya que encontrar\xe1s partes de ese requisito que son variaciones u otros problemas que ya has resuelto, o al menos, si es algo totalmente nuevo, hay una buena probabilidad de que detr\xe1s de eso haya principios que ya has revisado, as\xed que ser\xe1s m\xe1s r\xe1pido y m\xe1s r\xe1pido (y tal vez m\xe1s c\xf3modo y m\xe1s c\xf3modo)."}]}')}}]);